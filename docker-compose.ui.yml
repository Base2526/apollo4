version: "3"
services:
  ################################
  #   Setup Api Mongo and mongo-express container
  # ################################ 
  # mongo:
  #   image: mongo:6.0.1
  #   container_name: a4_mongo
  #   # command: mongod --auth --port 29102
  #   command: mongod --port 29102
  #   expose:
  #     - 29102
  #   ports:
  #     - 29102:29102
  #   # ports:
  #   #   - 27017:27017
  #   env_file:
  #     - ./env/.env.dev
  #   environment:
  #     - MONGO_MAX_CONNECTIONS=100
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=b9be11166d72e9e3ae7fd407165e4bd2
  #   volumes:
  #     #   - ./mongo-single/data:/data/db
  #     #   - ./mongo-single/restore:/mongo-single/restore
  #     #   - ./mongo-single/mongod.conf:/etc/mongod.conf
  #     - ./mongo/mongod.conf:/etc/mongod.conf
  #     - ./mongo/check_and_add_user.sh:/usr/local/bin/check_and_add_user.sh
  #     # - ./mongo/db:/data/db
  #     - ./mongo/backups:/app/src/backups
  #     # - ./mongo/check_and_add_user.sh:/docker-entrypoint-initdb.d/init-mongo.sh
  #   restart: always
  #   networks:
  #     - a4
  # # ################################
  # #   Setup React-admin container
  # ################################
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: a4_frontend
  #   env_file:
  #     - ./env/.env.dev
  #   # environment:
  #   #   # - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
  #   #   # - WATCHPACK_POLLING=${WATCHPACK_POLLING}
  #   #   # - REACT_APP_NODE_ENV=${REACT_APP_NODE_ENV}
  #   #   # - REACT_APP_HOST_GRAPHAL=${REACT_APP_HOST_GRAPHAL}:${GRAPHQL_PORT}
  #   #   # - FRONTEND_PORT=${FRONTEND_PORT}
  #   #   # - PORT=${FRONTEND_PORT}
  #   #   # - REACT_APP_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
  #   #   # - REACT_APP_GOOGLE_ANALYTICS4=${REACT_APP_GOOGLE_ANALYTICS4}
  #   #   # - REACT_APP_FACEBOOK_APPID=448400870781752
  #   ports:
  #     - "80:3000"
  #   volumes:
  #     - ./frontend/src:/app/src
  #     - ./uploads:/var/storage
  #   depends_on:
  #     - mongo
  #   networks:
  #     - a4
  # ################################
  ################################
  #   Setup React-admin container
  ################################
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.vite.dev
    container_name: a4_frontend
    # command: npm run dev
    env_file:
      - ./env/.env.ui
    environment:
      # - VITE_DEV_SERVER_HOST=0.0.0.0
      - NODE_ENV=development
      # - CHOKIDAR_USEPOLLING=true  # Enable polling for file watching
    #   # - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    #   # - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    #   # - REACT_APP_NODE_ENV=${REACT_APP_NODE_ENV}
    #   # - REACT_APP_HOST_GRAPHAL=${REACT_APP_HOST_GRAPHAL}:${GRAPHQL_PORT}
    #   # - FRONTEND_PORT=${FRONTEND_PORT}
    #   # - PORT=${FRONTEND_PORT}
    #   # - REACT_APP_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
    #   # - REACT_APP_GOOGLE_ANALYTICS4=${REACT_APP_GOOGLE_ANALYTICS4}
      - REACT_APP_FACEBOOK_APPID=448400870781752
      - VITE_TITLE=Dockerization
    ports:
      - "5173:5173"
      # - "80:5173" # Map container port to host port
    volumes:
      # - ./frontend:/app
      # - /app/node_modules
      - ./frontend/src:/app/src
      - ./uploads:/var/storage
    # depends_on:
    #   - mongo
    networks:
      - a4
  ################################
  
  ################################
  #   Setup Api Graphql container
  # ################################
  # backend:
  #   build: 
  #     context: ./backend
  #     dockerfile: Dockerfile.dev   
  #   container_name: a4_backend          
  #   ports:
  #     - "4000:4000"
  #   env_file:
  #     - ./env/.env.dev
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock  # set can run docker inside ex. run docker backup db(a4_mongo)
  #     - ./backend/src:/app/src        
  #     - ./uploads:/app/uploads  
  #     - ./mongo/backups:/app/backups
  #   depends_on:
  #     - mongo  
  #   # environment:
  #   #   - DOCKER_HOST=unix:///var/run/docker.sock
  #   #   # - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
  #   #   # - WATCHPACK_POLLING=${WATCHPACK_POLLING}
  #   #   # - RA_HOST=${RA_HOST}:${GRAPHQL_PORT}/
  #   #   # - GRAPHQL_PORT=${GRAPHQL_PORT}
  #   #   # - JWT_SECRET=${JWT_SECRET}
  #   #   # - MONGO_URI=mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongo:${MONGO_PORT}/${MONGO_INITDB_DATABASE}?authMechanism=DEFAULT
  #   #   # - MONGO_URI=mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongo:${MONGO_PORT}/${MONGO_INITDB_DATABASE}
  #   #   # - GITHUB_URL_OAUTH_ACCESS_TOKEN=${GITHUB_URL_OAUTH_ACCESS_TOKEN}
  #   #   # - GITHUB_URL_OAUTH_USER=${GITHUB_URL_OAUTH_USER}
  #   #   # - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
  #   #   # - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET} 
  #   networks:
  #     - a4
  # ################################

networks:
  a4:
    external: true 
    # name: a4-network